name: CI

on:
  push:
    branches: [ "master", "github-action-test" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[skip-ci]')"
    name: Run test on ${{ matrix.os }} with Xcode ${{ matrix.xcode-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-15
            xcode-version: '16.2'
            swift-version: '6.0'
            
          - os: macos-14
            xcode-version: '15.4'
            swift-version: '5.10'
            
          - os: macos-14
            xcode-version: '15.2'
            swift-version: '5.9'
            

    steps:
    - uses: actions/checkout@v4

    - name: Set up Swift
      uses: swift-actions/setup-swift@v1
        
    - name: Select Xcode Version
      run: sudo xcode-select -s /Applications/Xcode_${{ matrix.xcode-version }}.app

    - name: List available simulators
      run: xcrun simctl list

 - name: Pick latest available iPhone simulator
      run: |
        # Find the newest iPhone simulator available (prefer iPhone 15/16, otherwise fallback)
        SIMULATOR=$(xcrun simctl list devices available | grep -E "iPhone (1[5-9]|[2-9][0-9])" | tail -1 | awk -F'[()]' '{print $2}')
        echo "Picked simulator ID: $SIMULATOR"
        echo "SIMULATOR=$SIMULATOR" >> $GITHUB_ENV
        
    - name: Build
      run: |
        xcodebuild build-for-testing \
          -scheme VWO-FME \
          -sdk iphonesimulator \
          -configuration Debug

    - name: Test with Coverage
      run: |
        xcodebuild test \
          -scheme VWO-FMETests \
          -destination '${{ matrix.destination }}' \
          -sdk iphonesimulator \
          -configuration Debug \
          -enableCodeCoverage YES \
          -resultBundlePath ./TestResults.xcresult \
          -verbose

    - name: Generate Coverage Report
      run: |
        xcrun xccov view --report --files-for-target VWO-FME ./TestResults.xcresult
        
    - name: Notification
      if: always()
      id: slack
      uses: wingify/slack-github-action@v1.15.1-wingify
      with:
        channel-id: 'vwo-fs-fme-sdk-job-status'
        slack-message: "<!here> iOS FME SDK Test on *macOS-${{ matrix.os }}* and *Xcode-${{ matrix.xcode-version }}* got *${{ job.status }}* ${{ job.status == 'success' && ':heavy_check_mark:' || ':x:' }} \nCommit: `${{ github.event.head_commit.message }}`. \nCheck the latest build: https://github.com/wingify/vwo-fme-ios-sdk/actions"
        color: "${{ job.status == 'success' && '#00FF00' || '#FF0000' }}"
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
